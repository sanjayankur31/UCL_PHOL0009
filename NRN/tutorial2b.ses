
//
//  UCL, Department of Physiology, C123 Tutorial
//
//  Simulating Synaptic Integration
//  Based on Zach Mainen's model of a layer 5 pyramidal cell 
//  (Mainen & Sejnowski 1995)
//
//  Padraig Gleeson, Volker Steuber, 2005-2007
//

{load_file("nrngui.hoc")}
objectvar save_window_, rvp_
objectvar scene_vector_[4]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}

//Begin PointProcessGroupManager
{
load_file("pointgrp.hoc")
}
{
ocbox_ = new PointProcessGroupManager(0)
}
{object_push(ocbox_)}
{
ms = new MechanismStandard("IClamp")
ms.set("del", 4, 0)
ms.set("dur", 40, 0)
ms.set("amp", 0, 0)
mnews("IClamp", ms)
select(0)
execute("dend6[11] ocbox_.move(0.25)")
ms = new MechanismStandard("IClamp")
ms.set("del", 4, 0)
ms.set("dur", 40, 0)
ms.set("amp", 0, 0)
mnews("IClamp", ms)
select(1)
execute("soma ocbox_.move(0.5)")
ms = new MechanismStandard("IClamp")
ms.set("del", 4, 0)
ms.set("dur", 40, 0)
ms.set("amp", 0, 0)
mnews("IClamp", ms)
select(2)
execute("dend9[76] ocbox_.move(0.5)")
ms = new MechanismStandard("IClamp")
ms.set("del", 4, 0)
ms.set("dur", 40, 0)
ms.set("amp", 0, 0)
mnews("IClamp", ms)
select(3)
execute("dend9[81] ocbox_.move(0.5)")
ms = new MechanismStandard("MyExpSyn")
ms.set("onset", 4, 0)
ms.set("tau", 2, 0)
ms.set("e", 0, 0)
ms.set("gmax", 0, 0)
mnews("MyExpSyn", ms)
select(4)
execute("dend6[11] ocbox_.move(0.25)")
ms = new MechanismStandard("MyExpSyn")
ms.set("onset", 4, 0)
ms.set("tau", 2, 0)
ms.set("e", 0, 0)
ms.set("gmax", 0, 0)
mnews("MyExpSyn", ms)
select(5)
execute("dend6[9] ocbox_.move(0)")
ms = new MechanismStandard("MyExpSyn")
ms.set("onset", 0, 0)
ms.set("tau", 2, 0)
ms.set("e", 0, 0)
ms.set("gmax", 0, 0)
mnews("MyExpSyn", ms)
select(6)
execute("dend9[7] ocbox_.move(0.625)")
ms = new MechanismStandard("MyExpSyn")
ms.set("onset", 4, 0)
ms.set("tau", 2, 0)
ms.set("e", 0, 0)
ms.set("gmax", 0, 0)
mnews("MyExpSyn", ms)
select(7)
execute("soma ocbox_.move(0.5)")
ms = new MechanismStandard("MyExpSyn")
ms.set("onset", 4, 0)
ms.set("tau", 2, 0)
ms.set("e", 0, 0)
ms.set("gmax", 0, 0)
mnews("MyExpSyn", ms)
select(8)
execute("dend9[76] ocbox_.move(0.5)")
ms = new MechanismStandard("MyExpSyn")
ms.set("onset", 4, 0)
ms.set("tau", 10, 0)
ms.set("e", -70, 0)
ms.set("gmax", 0, 0)
mnews("MyExpSyn", ms)
select(9)
execute("dend6[11] ocbox_.move(0)")
ms = new MechanismStandard("MyExpSyn")
ms.set("onset", 4, 0)
ms.set("tau", 10, 0)
ms.set("e", -70, 0)
ms.set("gmax", 0, 0)
mnews("MyExpSyn", ms)
select(10)
execute("soma ocbox_.move(0.5)")
}
{object_pop() doNotify()}
{
ocbox_ = ocbox_.v1
ocbox_.map("PointProcessGroupManager", 0, 182, 514.08, 519.84)
}
objref ocbox_
//End PointProcessGroupManager

{
xpanel("RunControl", 0)
v_init = -70
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 0
xvalue("t","t", 2 )
tstop = 60
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
screen_update_invl = 0.05
xvalue("Scrn update invl","screen_update_invl", 1,"", 0, 1 )
realtime = 0
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(835,1)
}
{
save_window_ = new Graph(0)
save_window_.size(0,60,-80,40)
scene_vector_[3] = save_window_
{save_window_.view(0, -80, 60, 120, 972, 576, 359.28, 243.3)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("v(.5)", 1, 1, 0.8, 0.9, 2)
save_window_.addvar("iseg.v(.5)", 7, 1, 0.8, 0.9, 2)
}
{
xpanel("Cell Parameters", 0)
c_m = 0.75
xvalue("Cm (uF/cm2)","c_m", 1,"update_values()", 0, 0 )
rm = 40000
xvalue("Rm (ohm cm2)","rm", 1,"update_values()", 0, 0 )
ra = 200
xvalue("Ra (ohm cm)","ra", 1,"update_values()", 0, 0 )
xlabel("Channel Conductances")

gna_dend9_81 = 30
xvalue("gna dend9[78-81] (pS/um2)","gna_dend9_81", 1,"update_values()", 0, 0 )

gna_dend = 30
xvalue("gna dend others (pS/um2)","gna_dend", 1,"update_values()", 0, 0 )

gna_soma = 30
xvalue("gna soma (pS/um2)","gna_soma", 1,"update_values()", 0, 0 )
gna_node = 30000
xvalue("gna axon (pS/um2)","gna_node", 1,"update_values()", 0, 0 )
gk = 100
xvalue("gk (pS/um2)","gk", 1,"update_values()", 0, 0 )
xpanel(1230,0)
}
objectvar scene_vector_[1]
{doNotify()}
