
//
//  UCL, Department of Physiology, C123 Tutorial
//
//  Action potential generation and Hodgkin-Huxley theory
//
//  This is a Neuron session file, containing the graphical elements needed for the associated
//  hoc file (tutorial1.hoc). 
//
//  Padraig Gleeson, Volker Steuber, 2005-2007
//


{load_file("nrngui.hoc")}
objectvar save_window_, rvp_
objectvar scene_vector_[8]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}

//Begin I/V Clamp Electrode
{
load_file("electrod.hoc")
}
{
ocbox_=new Electrode(0)
execute("can_locate=1 sec=\"soma\" xloc=0.5 locate(0)", ocbox_)
execute("vc.dur[0]=10 vc.amp[0]=-63.77", ocbox_)
execute("vc.dur[1]=30 vc.amp[1]=10", ocbox_)
execute("vc.dur[2]=25 vc.amp[2]=-63.77", ocbox_)
execute("stim.del=5 stim.dur=25 stim.amp=0.002", ocbox_)
execute("vcsteps=5", ocbox_)
execute("samp=stim.amp  store_vclamp() glyph()", ocbox_)
ocbox_ = ocbox_.v1
ocbox_.map("I/V Clamp Electrode", 6, 372, 262.8, 660.96)
}
objref ocbox_
//End I/V Clamp Electrode

{
xpanel("RunControl", 0)
v_init = -63.77
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 50
xvalue("t","t", 2 )
tstop = 50
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
screen_update_invl = 0.05
xvalue("Scrn update invl","screen_update_invl", 1,"", 0, 1 )
realtime = 0.05
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(492,0)
}
{
save_window_ = new Graph(0)
save_window_.size(0,50,-80,80)
scene_vector_[3] = save_window_
{save_window_.view(0, -80, 50, 160, 900, 0, 272.16, 182.1)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("v(.5)", 1, 1, 0.8, 0.9, 2)
}
{
xpanel("Simulation Parameters", 0)
temperature = 6.3
xvalue("Temperature","temperature", 1,"update_values()", 0, 0 )
xlabel("Channel parameters")
gna = 0.12
xvalue("Na channel conductance","gna", 1,"update_values()", 0, 0 )
gk = 0.036
xvalue("K  channel conductance","gk", 1,"update_values()", 0, 0 )
xpanel(6,120)
}
{
save_window_ = new Graph(0)
save_window_.size(0,50,0,0.05)
scene_vector_[4] = save_window_
{save_window_.view(0, 0, 50, 0.05, 896, 390, 270.72, 180.66)}
graphList[1].append(save_window_)
save_window_.save_name("graphList[1].")
save_window_.addexpr("soma.gk_hh( 0.5 )", 3, 1, 0.8, 0.9, 2)
save_window_.addexpr("soma.gna_hh( 0.5 )", 2, 1, 0.8, 0.9, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,50,-2,5)
scene_vector_[5] = save_window_
{save_window_.view(0, -2, 50, 7, 894, 778, 275.04, 178.5)}
graphList[1].append(save_window_)
save_window_.save_name("graphList[1].")
save_window_.addexpr("soma.ina( 0.5 )", 2, 1, 0.8, 0.9, 2)
save_window_.addexpr("soma.ik( 0.5 )", 3, 1, 0.8, 0.9, 2)
}
objectvar scene_vector_[1]
{doNotify()}
